JFDML JFormDesigner: "8.1.1.0.298" Java: "17.0.8.1" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormWindow( "javax.swing.JFrame", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
			"$horizontalGroup": "par l {seq t {space :::p, par l {comp tablePanel::::516:x, comp searchField::::516:x}, space :::p}}"
			"$verticalGroup": "par l {seq l {space :::p, comp searchField:::p::p, space :::p, comp tablePanel::::542:x, space :::p}}"
		} ) {
			name: "this"
			"defaultCloseOperation": 3
			"iconImage": new com.jformdesigner.model.SwingIcon( 0, "/images/passlogo.png" )
			"autoRequestFocus": false
			"resizable": false
			"title": "{VERSION}"
			auxiliary() {
				"JavaCodeGenerator.preInitCode": "System.setProperty(\"flatlaf.useWindowDecorations\", \"true\");\nSystem.setProperty(\"flatlaf.menuBarEmbedded\", \"true\");"
			}
			add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
				name: "tablePanel"
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 12
					"JavaCodeGenerator.variableGetter": true
				}
				add( new FormComponent( "javax.swing.JTable" ) {
					name: "table"
					"autoResizeMode": 3
					auxiliary() {
						"JavaCodeGenerator.variableModifiers": 12
						"JavaCodeGenerator.postInitCode": "table.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n                \"USUARIO\", \"SITIO\", \"CONTRASEÑA\", \"FUERZA\"\n            }\n        ) {\n            @SuppressWarnings(\"rawtypes\")\n\t\t\tClass[] types = new Class [] {\n                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class\n            };\n            boolean[] canEdit = new boolean [] {\n                false, false, false, false\n            };\n\n            @SuppressWarnings(\"rawtypes\")\n\t\t\tpublic Class getColumnClass(int columnIndex) {\n                return types [columnIndex];\n            }\n\n            public boolean isCellEditable(int rowIndex, int columnIndex) {\n                return canEdit [columnIndex];\n            }\n        });\n        table.getTableHeader().setReorderingAllowed(false);\n        table.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                tableMouseClicked(evt);\n            }\n        });\n        table.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                tableKeyPressed(evt);\n            }\n        });\n        tablePanel.setViewportView(table);\n        if (table.getColumnModel().getColumnCount() > 0) {\n            table.getColumnModel().getColumn(0).setResizable(false);\n            table.getColumnModel().getColumn(1).setResizable(false);\n            table.getColumnModel().getColumn(2).setResizable(false);\n            table.getColumnModel().getColumn(3).setResizable(false);\n        }\nguiManager.setColumnWidths(table, new int[] {200,140,80,68});"
						"JavaCodeGenerator.variableGetter": true
					}
				} )
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "searchField"
				"toolTipText": "Busca contraseñas"
				"cursor": new java.awt.Cursor( 2 )
				"margin": new java.awt.Insets( 6, 6, 6, 6 )
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 9
					"JavaCodeGenerator.variableGetter": true
				}
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 0 )
			"size": new java.awt.Dimension( 530, 625 )
		} )
		add( new FormContainer( "javax.swing.JMenuBar", new FormLayoutManager( class javax.swing.JMenuBar ) ) {
			name: "toolBar"
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "newBtn"
				"text": "Nueva"
				"margin": new java.awt.Insets( 2, 2, 2, 2 )
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/images/newpass_small.png" )
				"focusable": false
				"background": &Color0 new java.awt.Color( 30, 30, 30, 255 )
				"iconTextGap": 5
				"preferredSize": new java.awt.Dimension( 80, 30 )
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 12
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "newBtnActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "viewBtn"
				"text": "Ver"
				"margin": new java.awt.Insets( 2, 2, 2, 12 )
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/images/view_small.png" )
				"focusable": false
				"background": #Color0
				"iconTextGap": 5
				"preferredSize": new java.awt.Dimension( 70, 30 )
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 12
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "viewBtnActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "modifyBtn"
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/images/edit_small.png" )
				"text": "Editar"
				"margin": new java.awt.Insets( 2, 2, 2, 12 )
				"focusable": false
				"background": #Color0
				"iconTextGap": 5
				"preferredSize": new java.awt.Dimension( 80, 30 )
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 12
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "modifyBtnActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "importBtn"
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/images/import_small.png" )
				"text": "Importar"
				"margin": new java.awt.Insets( 2, 2, 2, 12 )
				"focusable": false
				"background": #Color0
				"iconTextGap": 5
				"preferredSize": new java.awt.Dimension( 96, 30 )
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 12
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "importBtnActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "exportBtn"
				"icon": new com.jformdesigner.model.SwingIcon( 0, "/images/export_small.png" )
				"text": "Exportar"
				"margin": new java.awt.Insets( 2, 2, 2, 12 )
				"focusable": false
				"background": #Color0
				"iconTextGap": 5
				"preferredSize": new java.awt.Dimension( 96, 30 )
				auxiliary() {
					"JavaCodeGenerator.variableModifiers": 12
					"JavaCodeGenerator.variableGetter": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "exportBtnActionPerformed", true ) )
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 630 )
		} )
	}
}
